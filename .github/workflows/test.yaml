name: test
on:
  pull_request:
  merge_group:
  push:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  # renovate: datasource=github-releases depName=FiloSottile/age
  age-version: 1.2.1
  # renovate: datasource=github-releases depName=getsops/sops
  sops-version: 3.9.4

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Setup shellcheck
        run: sudo apt-get install -y shellcheck

      - name: Setup yamllint
        run: sudo apt-get install -y yamllint

      - name: Setup Bats and bats libs
        uses: bats-core/bats-action@42fcc8700f773c075a16a90eb11674c0318ad507 # 3.0.1
        with:
          # renovate: datasource=github-releases depName=bats-core/bats-core
          bats-version: 1.11.1
          # renovate: datasource=github-releases depName=bats-core/bats-support
          support-version: 0.3.0
          # renovate: datasource=github-releases depName=bats-core/bats-assert
          assert-version: 2.1.0
          detik-install: false
          # renovate: datasource=github-releases depName=bats-core/bats-file
          file-version: 0.4.0

      - name: Setup age
        uses: alessiodionisi/setup-age-action@82b9aea163ade7fe23441552a514cf666b214077 # v1.3.0
        with:
          version: ${{ env.age-version }}

      - name: Setup sops
        uses: nhedger/setup-sops@4cb6513348c5f59a83644dfeb1d93bcb63158c58 # v2
        with:
          version: ${{ env.sops-version }}

      - run: make check-testlib
      - run: make test-testlib

      - run: make check
      - run: make unittest
      - run: make inttest

  e2e:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Setup age
        uses: alessiodionisi/setup-age-action@82b9aea163ade7fe23441552a514cf666b214077 # v1.3.0
        with:
          version: ${{ env.age-version }}

      - name: Setup sops
        uses: nhedger/setup-sops@4cb6513348c5f59a83644dfeb1d93bcb63158c58 # v2
        with:
          version: ${{ env.sops-version }}

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@cb9bde2e2525e640591a934b1fd28eef1dcaf5e5 # v6
        id: gpg-import
        with:
          gpg_private_key: ${{ secrets.IT_E2E_SOPS_GPG_KEY }}

      # End-to-end tests
      - name: 'test: run command with encrypted environment file and age secret key'
        if: always()
        uses: ./
        env:
          SOPS_AGE_KEY: ${{ secrets.IT_E2E_SOPS_AGE_KEY }}
        with:
          env_file: test/assets/inttest.env
          run: bash -c '[[ \"\$SECRET_KEY\" == \"YOURSECRETKEYGOESHERE\" && \"\$SECRET_HASH\" == \"something-with-a-#-hash\" ]]'

      - name: 'test: run command with encrypted environment file and age key file'
        if: always()
        uses: ./
        env:
          SOPS_AGE_KEY_FILE: test/assets/inttest-key.age
        with:
          env_file: test/assets/inttest.env
          run: bash -c '[[ \"\$SECRET_KEY\" == \"YOURSECRETKEYGOESHERE\" && \"\$SECRET_HASH\" == \"something-with-a-#-hash\" ]]'

      - name: 'test: run command with encrypted environment file and gpg key'
        if: always()
        uses: ./
        env:
          SOPS_GPG_FP: ${{ steps.gpg-import.outputs.fingerprint }}
        with:
          env_file: test/assets/inttest.env
          run: bash -c '[[ \"\$SECRET_KEY\" == \"YOURSECRETKEYGOESHERE\" && \"\$SECRET_HASH\" == \"something-with-a-#-hash\" ]]'

